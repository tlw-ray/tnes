From: "Saved by Windows Internet Explorer 9"
Subject: 6502 Assembler
Date: Tue, 21 Feb 2012 22:28:48 +0800
MIME-Version: 1.0
Content-Type: multipart/related;
	type="text/html";
	boundary="----=_NextPart_000_0000_01CCF0E8.2E628830"
X-MimeOLE: Produced By Microsoft MimeOLE V6.1.7601.17609

这是 MIME 格式的多方邮件。

------=_NextPart_000_0000_01CCF0E8.2E628830
Content-Type: text/html;
	charset="iso-8859-15"
Content-Transfer-Encoding: quoted-printable
Content-Location: http://www.e-tradition.net/bytes/6502/assembler.html

<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<HTML><HEAD><TITLE>6502 Assembler</TITLE>
<META content=3D"text/html; charset=3Diso-8859-15" =
http-equiv=3Dcontent-type>
<META content=3Dno http-equiv=3Dimagetoolbar>
<META name=3Ddescription content=3D"A JavaScript assembler for the =
6502/6510 MPU">
<META name=3Dkeywords=20
content=3D"6502 assembler, 6510 assembler, MOS 6502, MOS 6510, =
JavaScript, electronic tradition, e-tradion.net"><!-- N. Landsteiner, =
electronic tradion 2005; e-tradion.net -->
<SCRIPT language=3DJavaScript type=3Dtext/javascript=20
src=3D"http://www.e-tradition.net/bytes/6502/6502assembler.js"></SCRIPT>

<STYLE type=3Dtext/css>.display {
	FONT-FAMILY: courier,fixed,sans-serif; COLOR: white; FONT-SIZE: 15px
}
.display2 {
	FONT-FAMILY: courier,fixed,sans-serif; COLOR: white; FONT-SIZE: 12px
}
XMP {
	FONT-FAMILY: courier,fixed,sans-serif; COLOR: white; FONT-SIZE: 12px
}
.regset {
	FONT-FAMILY: courier,fixed,sans-serif; COLOR: #77dd11; FONT-SIZE: 15px; =
TEXT-DECORATION: none
}
A.regset {
	FONT-FAMILY: courier,fixed,sans-serif; COLOR: #77dd11; FONT-SIZE: 15px; =
TEXT-DECORATION: none
}
A.regset:link {
	FONT-FAMILY: courier,fixed,sans-serif; COLOR: #77dd11; FONT-SIZE: 15px; =
TEXT-DECORATION: none
}
A.regset:visited {
	FONT-FAMILY: courier,fixed,sans-serif; COLOR: #77dd11; FONT-SIZE: 15px; =
TEXT-DECORATION: none
}
A.regset:hover {
	TEXT-DECORATION: underline
}
A.regset:active {
	COLOR: ; TEXT-DECORATION: underline
}
H1 {
	LETTER-SPACING: 2px; FONT-FAMILY: arial,helvetica,sans-serif; COLOR: =
white; FONT-SIZE: 32px; FONT-WEIGHT: normal
}
H1 SMALL {
	LETTER-SPACING: 2px; FONT-SIZE: 24px
}
H3 {
	LETTER-SPACING: 1px; FONT-FAMILY: arial,helvetica,sans-serif; COLOR: =
white; FONT-SIZE: 20px; FONT-WEIGHT: normal
}
.text18 {
	LINE-HEIGHT: 18px; FONT-FAMILY: Verdana,Arial,Helvetica,sans-serif; =
COLOR: white; FONT-SIZE: 11px
}
.text {
	FONT-FAMILY: Verdana,Arial,Helvetica,sans-serif; COLOR: white; =
FONT-SIZE: 11px
}
.isButton {
	FONT-FAMILY: courier,fixed,sans-serif; COLOR: black; FONT-SIZE: 12px
}
.formField {
	FONT-FAMILY: courier,fixed,sans-serif; BACKGROUND: #333333; COLOR: =
#dddddd; FONT-SIZE: 12px
}
</STYLE>

<META name=3DGENERATOR content=3D"MSHTML 9.00.8112.16441"></HEAD>
<BODY=20
style=3D"BORDER-BOTTOM: 0px; BORDER-LEFT: 0px; BORDER-TOP: 0px; =
BORDER-RIGHT: 0px"=20
bottomMargin=3D0 aLink=3D#bb0000 leftMargin=3D0 rightMargin=3D0 =
topMargin=3D0=20
bgColor=3D#002543 text=3D#ffffff vLink=3D#d4dce5 link=3D#d4dce5 =
marginwidth=3D"0"=20
marginheight=3D"0"><A name=3Dtop></A>
<TABLE border=3D0 cellSpacing=3D0 cellPadding=3D0 width=3D700>
  <TBODY>
  <TR>
    <TD height=3D18 width=3D20><IMG=20
      src=3D"http://www.e-tradition.net/images/leer.gif" width=3D20 =
height=3D1></TD>
    <TD height=3D18 width=3D192><IMG=20
      src=3D"http://www.e-tradition.net/images/leer.gif" width=3D192 =
height=3D1></TD>
    <TD height=3D18></TD></TR>
  <TR>
    <TD></TD>
    <TD height=3D109><A href=3D"http://www.e-tradition.net/"><IMG=20
      title=3De-tradition.net border=3D0 hspace=3D8 =
alt=3De-tradition.net=20
      src=3D"http://www.e-tradition.net/images/site_xsmall.gif" =
width=3D165=20
      height=3D109></A></TD>
    <TD vAlign=3Dmiddle>
      <H1>6502 Assembler</H1></TD></TR>
  <TR>
    <TD height=3D18 colSpan=3D3>&nbsp;</TD></TR>
  <TR>
    <TD colSpan=3D2></TD>
    <TD vAlign=3Dtop><!-- ass -->
      <TABLE border=3D0 cellSpacing=3D5 cellPadding=3D0>
        <FORM onsubmit=3D"return false" name=3Dass>
        <TBODY>
        <TR vAlign=3Dtop>
          <TD class=3Ddisplay2>src:</TD>
          <TD class=3Ddisplay2>listing:</TD></TR>
        <TR vAlign=3Dtop>
          <TD><TEXTAREA class=3DformField wrap=3Dvirtual cols=3D30 =
rows=3D20 name=3Dsrcfield></TEXTAREA></TD>
          <TD><TEXTAREA class=3DformField wrap=3Dvirtual cols=3D38 =
rows=3D20 readOnly name=3Dlisting></TEXTAREA></TD></TR>
        <TR vAlign=3Dtop>
          <TD colSpan=3D2 align=3Dright><INPUT class=3DisButton =
onclick=3Dassemble() value=3D"&nbsp;generate code&nbsp;" =
type=3Dbutton></TD></TR>
        <TR vAlign=3Dtop>
          <TD class=3Ddisplay2>&nbsp;<BR>object code:</TD>
          <TD class=3Ddisplay2>&nbsp;</TD></TR>
        <TR vAlign=3Dtop>
          <TD colSpan=3D2><TEXTAREA class=3DformField wrap=3Dvirtual =
cols=3D70 rows=3D10 readOnly =
name=3Dcodefield></TEXTAREA></TD></TR></TBODY></TABLE><!-- /ass -->
      <P class=3Dtext>&nbsp;</P>
      <P class=3Dtext18>Show the <A onclick=3D"if (this.blur) =
this.blur()"=20
      =
href=3D"http://www.e-tradition.net/bytes/6502/6502_instruction_set.html" =

      target=3Dinstset><IMG border=3D0=20
      src=3D"http://www.e-tradition.net/images/link.gif" width=3D11 =
height=3D12>6502=20
      Instruction Set</A>.<BR>Show the <A onclick=3D"if (this.blur) =
this.blur()"=20
      href=3D"http://www.e-tradition.net/bytes/6502/index.html"=20
      target=3Dvirtual6502><IMG border=3D0=20
      src=3D"http://www.e-tradition.net/images/link.gif" width=3D11=20
      height=3D12>virtual 6502</A> emulator.<BR>Show the <A=20
      onclick=3D"if (this.blur) this.blur()"=20
      href=3D"http://www.e-tradition.net/bytes/6502/disassembler.html"=20
      target=3Ddisassembler6502><IMG border=3D0=20
      src=3D"http://www.e-tradition.net/images/link.gif" width=3D11 =
height=3D12>6502=20
      Disassembler</A></P>
      <P class=3Dtext>&nbsp;</P>
      <H3>Instructions</H3>
      <P class=3Dtext18>This is is simple 2 pass assembler for the 65xx =
micro=20
      processor.<BR>It is thought to accompany the <A=20
      onclick=3D"if (this.blur) this.blur()"=20
      href=3D"http://www.e-tradition.net/bytes/6502/index.html"=20
      target=3Dvirtual6502>virtual 6502</A> emulator.</P>
      <P class=3Dtext18>To get your source code compiled:</P>
      <OL>
        <LI class=3Dtext18>Enter your source code in the "src" pane.=20
        <LI class=3Dtext18>Click the button "generate code".=20
        <LI class=3Dtext18>Watch the progress in the "listing" pane.=20
        <LI class=3Dtext18>Copy any generated code from the "object =
code"=20
        pane.<BR>(This can be pasted directly into the <A=20
        onclick=3D"if (this.blur) this.blur()"=20
        href=3D"http://www.e-tradition.net/bytes/6502/index.html"=20
        target=3Dvirtual6502>virtual 6502</A> emulator's memory =
pannel.)<BR>&nbsp;=20
        </LI></OL>
      <H3>Syntax</H3>
      <P class=3Dtext>The assembler supports the following syntax:</P>
      <TABLE border=3D0 cellSpacing=3D0 cellPadding=3D3>
        <TBODY>
        <TR>
          <TD class=3Dtext colSpan=3D2><B>Opcodes and =
Addressing</B></TD></TR>
        <TR>
          <TD class=3Dtext noWrap>&nbsp;&nbsp;</TD>
          <TD class=3Dtext>Instructions are always 3 letter mnemonics =
followed=20
            by an (optional) operand/address:</TD></TR></TBODY></TABLE>
      <TABLE border=3D0 cellSpacing=3D0 cellPadding=3D3>
        <TBODY>
        <TR>
          <TD class=3Dtext noWrap>&nbsp;&nbsp;</TD>
          <TD class=3Ddisplay2 noWrap>OPC</TD>
          <TD class=3Dtext noWrap>....</TD>
          <TD class=3Dtext noWrap>implied</TD></TR>
        <TR>
          <TD class=3Dtext noWrap>&nbsp;</TD>
          <TD class=3Ddisplay2 noWrap>OPC A</TD>
          <TD class=3Dtext noWrap>....</TD>
          <TD class=3Dtext noWrap>Accumulator</TD></TR>
        <TR>
          <TD class=3Dtext noWrap>&nbsp;</TD>
          <TD class=3Ddisplay2 noWrap>OPC #BB</TD>
          <TD class=3Dtext noWrap>....</TD>
          <TD class=3Dtext noWrap>immediate</TD></TR>
        <TR>
          <TD class=3Dtext noWrap>&nbsp;</TD>
          <TD class=3Ddisplay2 noWrap>OPC HHLL</TD>
          <TD class=3Dtext noWrap>....</TD>
          <TD class=3Dtext noWrap>absolute</TD></TR>
        <TR>
          <TD class=3Dtext noWrap>&nbsp;</TD>
          <TD class=3Ddisplay2 noWrap>OPC HHLL,X</TD>
          <TD class=3Dtext noWrap>....</TD>
          <TD class=3Dtext noWrap>absolute, X-indexed</TD></TR>
        <TR>
          <TD class=3Dtext noWrap>&nbsp;</TD>
          <TD class=3Ddisplay2 noWrap>OPC HHLL,Y</TD>
          <TD class=3Dtext noWrap>....</TD>
          <TD class=3Dtext noWrap>absolute, Y-indexed</TD></TR>
        <TR>
          <TD class=3Dtext noWrap>&nbsp;</TD>
          <TD class=3Ddisplay2 noWrap>OPC *LL</TD>
          <TD class=3Dtext noWrap>....</TD>
          <TD class=3Dtext noWrap>zeropage</TD></TR>
        <TR>
          <TD class=3Dtext noWrap>&nbsp;</TD>
          <TD class=3Ddisplay2 noWrap>OPC *LL,X</TD>
          <TD class=3Dtext noWrap>....</TD>
          <TD class=3Dtext noWrap>zeropage, X-indexed</TD></TR>
        <TR>
          <TD class=3Dtext noWrap>&nbsp;</TD>
          <TD class=3Ddisplay2 noWrap>OPC *LL,Y</TD>
          <TD class=3Dtext noWrap>....</TD>
          <TD class=3Dtext noWrap>zeropage, Y-indexed</TD></TR>
        <TR>
          <TD class=3Dtext noWrap>&nbsp;</TD>
          <TD class=3Ddisplay2 noWrap>OPC (BB,X)</TD>
          <TD class=3Dtext noWrap>....</TD>
          <TD class=3Dtext noWrap>X-indexed, indirect</TD></TR>
        <TR>
          <TD class=3Dtext noWrap>&nbsp;</TD>
          <TD class=3Ddisplay2 noWrap>OPC (LL),Y</TD>
          <TD class=3Dtext noWrap>....</TD>
          <TD class=3Dtext noWrap>indirect, Y-indexed</TD></TR>
        <TR>
          <TD class=3Dtext noWrap>&nbsp;</TD>
          <TD class=3Ddisplay2 noWrap>OPC (HHLL)</TD>
          <TD class=3Dtext noWrap>....</TD>
          <TD class=3Dtext noWrap>indirect</TD></TR>
        <TR>
          <TD class=3Dtext noWrap>&nbsp;</TD>
          <TD class=3Ddisplay2 noWrap>OPC BB</TD>
          <TD class=3Dtext noWrap>....</TD>
          <TD class=3Dtext noWrap>relative</TD></TR></TBODY></TABLE>
      <TABLE border=3D0 cellSpacing=3D0 cellPadding=3D3>
        <TBODY>
        <TR>
          <TD class=3Dtext noWrap>&nbsp;</TD>
          <TD class=3Dtext>&nbsp;<BR>Where HHLL is a 16 bit word and LL =
or BB a=20
            8 bit byte, and A is literal "A".<BR>There must not be any =
white=20
            space in any part of an instruction's=20
        address.<BR>&nbsp;</TD></TR></TBODY></TABLE>
      <TABLE border=3D0 cellSpacing=3D0 cellPadding=3D3>
        <TBODY>
        <TR>
          <TD class=3Dtext colSpan=3D4><B>Number =
Formats</B><BR>&nbsp;</TD></TR>
        <TR>
          <TD class=3Dtext noWrap>&nbsp;&nbsp;</TD>
          <TD class=3Ddisplay2 noWrap>$[0-9A-Zaz]</TD>
          <TD class=3Dtext noWrap>....</TD>
          <TD class=3Dtext noWrap>hex</TD></TR>
        <TR>
          <TD class=3Dtext noWrap>&nbsp;</TD>
          <TD class=3Ddisplay2 noWrap>%[01]</TD>
          <TD class=3Dtext noWrap>....</TD>
          <TD class=3Dtext noWrap>binary</TD></TR>
        <TR>
          <TD class=3Dtext noWrap>&nbsp;</TD>
          <TD class=3Ddisplay2 noWrap>0[0-7]</TD>
          <TD class=3Dtext noWrap>....</TD>
          <TD class=3Dtext noWrap>octal</TD></TR>
        <TR>
          <TD class=3Dtext noWrap>&nbsp;</TD>
          <TD class=3Ddisplay2 noWrap>[0-9]</TD>
          <TD class=3Dtext noWrap>....</TD>
          <TD class=3Dtext noWrap>decimal</TD></TR>
        <TR>
          <TD class=3Dtext noWrap>&nbsp;</TD>
          <TD class=3Ddisplay2 noWrap>&lt;</TD>
          <TD class=3Dtext noWrap>....</TD>
          <TD class=3Dtext noWrap>LO-byte portion</TD></TR>
        <TR>
          <TD class=3Dtext noWrap>&nbsp;</TD>
          <TD class=3Ddisplay2 noWrap>&gt;</TD>
          <TD class=3Dtext noWrap>....</TD>
          <TD class=3Dtext noWrap>HI-byte =
portion</TD></TR></TBODY></TABLE>
      <TABLE border=3D0 cellSpacing=3D0 cellPadding=3D3>
        <TBODY>
        <TR>
          <TD class=3Dtext colSpan=3D4>&nbsp;<BR><B>Labels and=20
        Identifiers</B></TD></TR>
        <TR>
          <TD class=3Dtext noWrap>&nbsp;&nbsp;</TD>
          <TD class=3Dtext18>Identifiers must begin with a letter [A-Z] =
and=20
            contain letters, digits, and the underscore [A-Z0-9_]. Only =
the=20
            first 6 characters are significant.<BR>All identifiers, =
numbers,=20
            opcodes, and pragmas are case insensitive and translated to =
upper=20
            case. Identifiers must not be the same as valid =
opcodes.<BR>The=20
            special identifier "*" refers to the program counter (PC).=20
        </TD></TR></TBODY></TABLE>
      <TABLE border=3D0 cellSpacing=3D0 cellPadding=3D3>
        <TBODY>
        <TR>
          <TD class=3Dtext noWrap>&nbsp;&nbsp;</TD>
          <TD class=3Dtext18>Exampels: </TD></TR>
        <TR vAlign=3Dtop>
          <TD class=3Dtext noWrap>&nbsp;</TD>
          <TD class=3Ddisplay2 noWrap>* =3D $C000</TD>
          <TD class=3Dtext noWrap>....</TD>
          <TD class=3Dtext>Set start address (PC) to C000.</TD></TR>
        <TR vAlign=3Dtop>
          <TD class=3Dtext noWrap>&nbsp;</TD>
          <TD class=3Ddisplay2 noWrap>LABEL1 LDA #4</TD>
          <TD class=3Dtext noWrap>....</TD>
          <TD class=3Dtext>Define LABEL1 with the address of instruction =

        LDA.</TD></TR>
        <TR vAlign=3Dtop>
          <TD class=3Dtext noWrap>&nbsp;</TD>
          <TD class=3Ddisplay2 =
noWrap>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; BNE=20
            LABEL2</TD>
          <TD class=3Dtext noWrap>....</TD>
          <TD class=3Dtext>Jump to address of label LABEL2.</TD></TR>
        <TR vAlign=3Dtop>
          <TD class=3Dtext noWrap>&nbsp;</TD>
          <TD class=3Ddisplay2 noWrap>STORE =3D $0800</TD>
          <TD class=3Dtext noWrap>....</TD>
          <TD class=3Dtext>Define STORE with value 0800.</TD></TR>
        <TR vAlign=3Dtop>
          <TD class=3Dtext noWrap>&nbsp;</TD>
          <TD class=3Ddisplay2 noWrap>HERE =3D *</TD>
          <TD class=3Dtext noWrap>....</TD>
          <TD class=3Dtext>Define HERE with current address =
(PC).</TD></TR>
        <TR vAlign=3Dtop>
          <TD class=3Dtext noWrap>&nbsp;</TD>
          <TD class=3Ddisplay2 noWrap>HERE2</TD>
          <TD class=3Dtext noWrap>....</TD>
          <TD class=3Dtext>Define HERE2 with current address =
(PC).</TD></TR>
        <TR vAlign=3Dtop>
          <TD class=3Dtext noWrap>&nbsp;</TD>
          <TD class=3Ddisplay2 =
noWrap>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; LDA=20
            #&lt;VAL1</TD>
          <TD class=3Dtext noWrap>....</TD>
          <TD class=3Dtext>Load LO-byte of =
VAL1.</TD></TR></TBODY></TABLE>
      <TABLE border=3D0 cellSpacing=3D0 cellPadding=3D3>
        <TBODY>
        <TR>
          <TD class=3Dtext =
colSpan=3D4>&nbsp;<BR><B>Pragmas</B></TD></TR>
        <TR vAlign=3Dtop>
          <TD class=3Dtext noWrap>&nbsp;&nbsp;</TD>
          <TD class=3Dtext colSpan=3D3>Pragmas start with a dot (.) and =
must be=20
            the only expression in a line:</TD></TR>
        <TR vAlign=3Dtop>
          <TD class=3Dtext noWrap>&nbsp;&nbsp;</TD>
          <TD class=3Ddisplay2 noWrap>.BYTE BB</TD>
          <TD class=3Dtext noWrap>....</TD>
          <TD class=3Dtext>Insert 8 bit byte at current address into =
code.</TD></TR>
        <TR vAlign=3Dtop>
          <TD class=3Dtext noWrap>&nbsp;&nbsp;</TD>
          <TD class=3Ddisplay2 noWrap>.WORD HHLL</TD>
          <TD class=3Dtext noWrap>....</TD>
          <TD class=3Dtext>Insert 16 bit word at current address into=20
code.</TD></TR>
        <TR vAlign=3Dtop>
          <TD class=3Dtext noWrap>&nbsp;&nbsp;</TD>
          <TD class=3Ddisplay2 noWrap>.END</TD>
          <TD class=3Dtext noWrap>....</TD>
          <TD class=3Dtext>End of source, stop assembly.=20
      (optional)</TD></TR></TBODY></TABLE>
      <TABLE border=3D0 cellSpacing=3D0 cellPadding=3D3>
        <TBODY>
        <TR>
          <TD class=3Dtext =
colSpan=3D4>&nbsp;<BR><B>Comments</B></TD></TR>
        <TR vAlign=3Dtop>
          <TD class=3Dtext noWrap>&nbsp;&nbsp;</TD>
          <TD class=3Ddisplay2 noWrap>; comment</TD>
          <TD class=3Dtext noWrap>....</TD>
          <TD class=3Dtext>Any sequence of characters starting with a =
semicolon=20
            till the end of the line are =
ignored.</TD></TR></TBODY></TABLE>
      <TABLE border=3D0 cellSpacing=3D0 cellPadding=3D3>
        <TBODY>
        <TR>
          <TD class=3Dtext colSpan=3D2>&nbsp;<BR><B>White =
Space</B></TD></TR>
        <TR vAlign=3Dtop>
          <TD class=3Dtext noWrap>&nbsp;&nbsp;</TD>
          <TD class=3Dtext>The assembler does not rely on any special =
formatting=20
            with the following exclusion:<BR>There must be white space =
between a=20
            label and a opcode and the opcode and any operands. Only one =

            instruction per line is permitted.</TD></TR></TBODY></TABLE>
      <TABLE border=3D0 cellSpacing=3D0 cellPadding=3D3>
        <TBODY>
        <TR>
          <TD class=3Dtext colSpan=3D4>&nbsp;<BR><B>Code=20
        Example</B><BR>&nbsp;</TD></TR>
        <TR vAlign=3Dtop>
          <TD class=3Dtext noWrap>&nbsp;&nbsp;</TD>
          <TD class=3Dtext noWrap>Src:</TD>
          <TD class=3Dtext noWrap>&nbsp;&nbsp;&nbsp;&nbsp;</TD>
          <TD class=3Dtext noWrap>Listing:</TD></TR>
        <TR vAlign=3Dtop>
          <TD class=3Dtext noWrap>&nbsp;&nbsp;</TD>
          <TD noWrap><XMP>*=3D$c000
       LDX #0
Label1 TXA
       STA $0400,X
       LDA #1
       STA $D800,X
       INX
       BNE Label1
       RTS
.END</XMP></TD>
          <TD class=3Dtext noWrap>&nbsp;&nbsp;</TD>
          <TD noWrap><XMP>* =3D $C000
C000        LDX #$00        A2 00
C002 LABEL1 TXA             8A
C003        STA $0400,X     9D 00 04
C006        LDA #$01        A9 01
C008        STA $D800,X     9D 00 D8
C00B        INX             E8
C00C        BNE LABEL1      D0 F4
C00E        RTS             60
C00F .END</XMP></TD></TR>
        <TR vAlign=3Dtop>
          <TD class=3Dtext noWrap>&nbsp;&nbsp;</TD>
          <TD class=3Dtext colSpan=3D3 noWrap>&nbsp;<BR>Object =
Code:</TD></TR>
        <TR vAlign=3Dtop>
          <TD class=3Dtext noWrap>&nbsp;&nbsp;</TD>
          <TD colSpan=3D3 noWrap><XMP>A2 00 8A 9D 00 04 A9 01
9D 00 D8 E8 D0 F4 60</XMP></TD></TR></TBODY></TABLE>
      <P class=3Dtext18>&nbsp;</P>
      <P class=3Dtext18>Disclaimer:<BR>This program is provided for free =
and AS=20
      IS, therefore without any warranty;<BR>without even the implied =
warranty=20
      of merchantability or fitness for a particular purpose.</P>
      <P class=3Dtext18>&nbsp;</P>
      <P class=3Dtext18>Links:<BR>The official 65xx Website (The Western =
Design=20
      Center Inc.): <A onclick=3D"if (this.blur) this.blur()"=20
      href=3D"http://www.65xx.com/" target=3D_blank><IMG border=3D0=20
      src=3D"http://www.e-tradition.net/images/link.gif" width=3D11=20
      height=3D12>www.65xx.com</A></P>
      <P class=3Dtext18>&nbsp;</P>
      <P class=3Dtext18>=A9 Norbert Landsteiner 2005, <A=20
      href=3D"http://e-tradition.net/" =
target=3D_blank>e-tradition.net</A></P>
      <P =
class=3Dtext18>&nbsp;</P></TD></TR></TBODY></TABLE></FORM></BODY></HTML>

------=_NextPart_000_0000_01CCF0E8.2E628830
Content-Type: image/gif
Content-Transfer-Encoding: base64
Content-Location: http://www.e-tradition.net/images/leer.gif

R0lGODlhDAAMAID/AMDAwAAAACH5BAEAAAAALAAAAAAMAAwAAAIKhI+py+0Po5yUFQA7

------=_NextPart_000_0000_01CCF0E8.2E628830
Content-Type: image/gif
Content-Transfer-Encoding: base64
Content-Location: http://www.e-tradition.net/images/site_xsmall.gif

R0lGODlhpQBtAPf/AP76/gYCCgYCEhoZHQoGGhIOIhMSGAcGEgsKFAICFgICEgICDgICCgYGFwIC
BgYGDgYGCgsNKwMGKgsNIxQWKwIGJAIFGwsNGxMVJBweLCImPdLW7PT1+gIGFhMVHfP1/hweJdHY
8t7k+9je8+vv/QIOMgIMLQYSNgIGEg0PFSouOistM83U6uLm8+vt8wYSMg4YM8DI3svS5tTb7t3j
8+Xr+9rf7QMMIxUeNM7X7gISNgMLHAsVKxslOyUuQztFWyInMiMmLcbP5NTb6s/W5QISMgYWNgIG
DhwkNCs2SzI9VAIWOgYaPggaOgsUJCMsPFNdb2hueebr9AIWNjQ9TEpWat7k7gIaPgMWMgQLFRMd
LBwjLSs1RDQ7RVxlczI2PHJ7iAIeQgIaOgYePgUVKxQlPCUsNTtFU0xWY0JIUNXb4wMSJAciQgge
OAkbMg4iOxosQzNGXUNPXkRNWFNdaVlibYSNmAIiRgIePgIaNgomRRQ2WxAqSA0cLBgxTB01URUk
NCc9VRQcJTRDVERWaykyPDlCTGBte2l1g5GdqnqEj1RaYQIeOgMmSgYqTgYmRgYiPgouUgoqSg4u
TgIGChg6Ww4hNCA0SRwsPCtCWiU5TSQ0RDdNZCw8TDxMXERUZExcbFlqe1RjcmRygHqJmIiWpO7z
+Pr8/u7w8vT19gIqTgImRgIiQQYqSgouTg0yUw8uShY4ViVEYQsUHCtJZD1SZUVabVBme2R5jEhT
XV1qdpqns6Ovuq65w7jCywYmQgUbLQorRhM1Uhs7Vh0+WxQqPCFBXDFOZzhVbT1ackllfDZLXCw6
Rltzh1twgVNmdml/kX2PnnGAjc/W3AIqSsDAwAYuTgYqRgouSg8yThpCYhQiLQYKDR8yQB0qNC9C
UUVgdU9icDxKVW+FlkxaZcTN1Nzh5ePo7AIuTgIqRgYuSgoyTgYYJA4ySlFtgAIuSgwaIxYqNiY7
RzZKVQsNDvb6/AIGBgoGBvr6+gYGBgICAgEBAQAAAAAAAAAAAAAAACH5BAEAANUALAAAAAClAG0A
QAj/AKsJHEiwoMGDCBMeXMWw4SqFECNKnEixosWLGAuyWnKL2JSHBB2uukZS0jU8eGg1oyXmkbpW
MGPKnEmzZiuS12Di3EnS5kxJwbBhk0S0qFBswWL2pPmI5CORGaMKZDUGnB8xIEOODDplHAc9RVqJ
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
K2w01llbyxEeAovByE1Xa61RQAA7

------=_NextPart_000_0000_01CCF0E8.2E628830
Content-Type: image/gif
Content-Transfer-Encoding: base64
Content-Location: http://www.e-tradition.net/images/link.gif

R0lGODlhCwAMAMT/ANfc7tHX6dPY6dne79jd7trf78/W6LXA07S/0oGTqoOVqldviCRDX0Zhe0di
e8DAwAgrSQgsSSNDXyREXwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACH5BAEA
AA8ALAAAAAALAAwAAAUm4COOZGmepYSKRrMCQAKdRI0w5qAPwVLuB1ypUFBETgLHarJ6hAAAOw==

------=_NextPart_000_0000_01CCF0E8.2E628830
Content-Type: application/octet-stream
Content-Transfer-Encoding: quoted-printable
Content-Location: http://www.e-tradition.net/bytes/6502/6502assembler.js

// 6502 assembler=0A=
// n. landsteiner, electronic tradion 2005; e-tradion.net=0A=
=0A=
// lookup tables=0A=
=0A=
var hextab=3D =
['0','1','2','3','4','5','6','7','8','9','A','B','C','D','E','F'];=0A=
var instrtab =3D {=0A=
	ADC:[  -1,  -1,0x69,0x6d,0x7d,0x79,0x65,0x75,  -1,  -1,0x61,0x71,  -1],=0A=
	AND:[  -1,  -1,0x29,0x2d,0x3d,0x39,0x25,0x35,  -1,  -1,0x21,0x31,  -1],=0A=
	ASL:[  -1,0x0a,  -1,0x0e,0x1e,  -1,0x06,0x16,  -1,  -1,  -1,  -1,  -1],=0A=
	BCC:[  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,0x90],=0A=
	BCS:[  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,0xb0],=0A=
	BEQ:[  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,0xf0],=0A=
	BIT:[  -1,  -1,  -1,0x2c,  -1,  -1,0x24,  -1,  -1,  -1,  -1,  -1,  -1],=0A=
	BMI:[  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,0x30],=0A=
	BNE:[  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,0xd0],=0A=
	BPL:[  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,0x10],=0A=
	BRK:[0x00,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1],=0A=
	BVC:[  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,0x50],=0A=
	BVS:[  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,0x70],=0A=
	CLC:[0x18,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1],=0A=
	CLD:[0xd8,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1],=0A=
	CLI:[0x58,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1],=0A=
	CLV:[0xb8,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1],=0A=
	CMP:[  -1,  -1,0xc9,0xcd,0xdd,0xd9,0xc5,0xd5,  -1,  -1,0xc1,0xd1,  -1],=0A=
	CPX:[  -1,  -1,0xe0,0xec,  -1,  -1,0xe4,  -1,  -1,  -1,  -1,  -1,  -1],=0A=
	CPY:[  -1,  -1,0xc0,0xcc,  -1,  -1,0xc4,  -1,  -1,  -1,  -1,  -1,  -1],=0A=
	DEC:[  -1,  -1,  -1,0xce,0xde,  -1,0xc6,0xd6,  -1,  -1,  -1,  -1,  -1],=0A=
	DEX:[0xca,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1],=0A=
	DEY:[0x88,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1],=0A=
	EOR:[  -1,  -1,0x49,0x4d,0x5d,0x59,0x45,0x55,  -1,  -1,0x41,0x51,  -1],=0A=
	INC:[  -1,  -1,  -1,0xee,0xfe,  -1,0xe6,0xf6,  -1,  -1,  -1,  -1,  -1],=0A=
	INX:[0xe8,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1],=0A=
	INY:[0xc8,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1],=0A=
	JMP:[  -1,  -1,  -1,0x4c,  -1,  -1,  -1,  -1,  -1,0x6c,  -1,  -1,  -1],=0A=
	JSR:[  -1,  -1,  -1,0x20,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1],=0A=
	LDA:[  -1,  -1,0xa9,0xad,0xbd,0xb9,0xa5,0xb5,  -1,  -1,0xa1,0xb1,  -1],=0A=
	LDX:[  -1,  -1,0xa2,0xae,  -1,0xbe,0xa6,  -1,0xb6,  -1,  -1,  -1,  -1],=0A=
	LDY:[  -1,  -1,0xa0,0xac,0xbc,  -1,0xa4,0xb4,  -1,  -1,  -1,  -1,  -1],=0A=
	LSR:[  -1,0x4a,  -1,0x4e,0x5e,  -1,0x46,0x56,  -1,  -1,  -1,  -1,  -1],=0A=
	NOP:[0xea,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1],=0A=
	ORA:[  -1,  -1,0x09,0x0d,0x1d,0x19,0x05,0x15,  -1,  -1,0x01,0x11,  -1],=0A=
	PHA:[0x48,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1],=0A=
	PHP:[0x08,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1],=0A=
	PLA:[0x68,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1],=0A=
	PLP:[0x28,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1],=0A=
	ROL:[  -1,0x2a,  -1,0x2e,0x3e,  -1,0x26,0x36,  -1,  -1,  -1,  -1,  -1],=0A=
	ROR:[  -1,0x6a,  -1,0x6e,0x7e,  -1,0x66,0x76,  -1,  -1,  -1,  -1,  -1],=0A=
	RTI:[0x40,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1],=0A=
	RTS:[0x60,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1],=0A=
	SBC:[  -1,  -1,0xe9,0xed,0xfd,0xf9,0xe5,0xf5,  -1,  -1,0xe1,0xf1,  -1],=0A=
	SEC:[0x38,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1],=0A=
	SED:[0xf8,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1],=0A=
	SEI:[0x78,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1],=0A=
	STA:[  -1,  -1,  -1,0x8d,0x9d,0x99,0x85,0x95,  -1,  -1,0x81,0x91,  -1],=0A=
	STX:[  -1,  -1,  -1,0x8e,  -1,  -1,0x86,  -1,0x96,  -1,  -1,  -1,  -1],=0A=
	STY:[  -1,  -1,  -1,0x8c,  -1,  -1,0x84,0x94,  -1,  -1,  -1,  -1,  -1],=0A=
	TAX:[0xaa,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1],=0A=
	TAY:[0xa8,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1],=0A=
	TSX:[0xba,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1],=0A=
	TXA:[0x8a,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1],=0A=
	TXS:[0x9a,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1],=0A=
	TYA:[0x98,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1]=0A=
};=0A=
=0A=
var steptab =3D [1,1,2,3,3,3,2,2,2,3,2,2,2];=0A=
=0A=
var addrtab =3D {=0A=
	imp:0,=0A=
	acc:1,=0A=
	imm:2,=0A=
	abs:3,=0A=
	abx:4,=0A=
	aby:5,=0A=
	zpg:6,=0A=
	zpx:7,=0A=
	zpy:8,=0A=
	ind:9,=0A=
	inx:10,=0A=
	iny:11,=0A=
	rel:12=0A=
};=0A=
=0A=
// constructor mods (ie4 fix)=0A=
=0A=
var IE4_keyref;=0A=
var IE4_keycoderef;=0A=
=0A=
function IE4_makeKeyref() {=0A=
	IE4_keyref=3D new Array();=0A=
	IE4_keycoderef=3D new Array();=0A=
	var hex=3D new Array('A','B','C','D','E','F');=0A=
	for (var i=3D0; i<=3D15; i++) {=0A=
		var high=3D(i<10)? i:hex[i-10];=0A=
		for (var k=3D0; k<=3D15; k++) {=0A=
			var low=3D(k<10)? k:hex[k-10];=0A=
			var cc=3Di*16+k;=0A=
			if (cc>=3D32) {=0A=
				var cs=3Dunescape("%"+high+low);=0A=
				IE4_keyref[cc]=3Dcs;=0A=
				IE4_keycoderef[cs]=3Dcc;=0A=
			}=0A=
		}=0A=
	}=0A=
}=0A=
=0A=
function _ie4_strfrchr(cc) {=0A=
	return (cc!=3Dnull)? IE4_keyref[cc] : '';=0A=
}=0A=
=0A=
function _ie4_strchcdat(n) {=0A=
	cs=3Dthis.charAt(n);=0A=
	return (IE4_keycoderef[cs])? IE4_keycoderef[cs] : 0;=0A=
}=0A=
=0A=
if (!String.fromCharCode) {=0A=
	IE4_makeKeyref();=0A=
	String.fromCharCode=3D_ie4_strfrchr;=0A=
}=0A=
if (!String.prototype.charCodeAt) {=0A=
	if (!IE4_keycoderef) IE4_makeKeyref();=0A=
	String.prototype.charCodeAt=3D_ie4_strchcdat;=0A=
}=0A=
=0A=
=0A=
// globals=0A=
=0A=
var codesrc, code, srcl, srcc, pc, symtab, listing;=0A=
=0A=
// functions=0A=
=0A=
function assemble() {=0A=
	symtab=3D{};=0A=
	listing=3Ddocument.forms.ass.listing;=0A=
	var codefield=3Ddocument.forms.ass.codefield;=0A=
	getSrc(document.forms.ass.srcfield);=0A=
	codefield.value=3D' \n';=0A=
	listing.value=3D'starting assembly\npass 1\n';=0A=
	var pass1=3Dfalse;=0A=
	var pass2=3Dfalse;=0A=
	code=3D[];=0A=
	pass1=3DdoPass(1);=0A=
	if (pass1) {=0A=
		listing.value=3D'pass 2\n';=0A=
		pass2=3DdoPass(2);=0A=
		if (pass2) {=0A=
			var c=3D'';=0A=
			var n=3D1;=0A=
			for (var i=3D0; i<code.length; i++) {=0A=
				c+=3DgetHexByte(code[i]);=0A=
				if (((n>0) && (n%8=3D=3D0)) || (i=3D=3Dcode.length-1)) {=0A=
					c+=3D'\n';=0A=
				}=0A=
				else {=0A=
					c+=3D' ';=0A=
				}=0A=
				n++;=0A=
			}=0A=
			codefield.value=3Dc;=0A=
			listing.value+=3D'\ndone.';=0A=
		}=0A=
	}=0A=
	if ((pass1) && (pass2)) {=0A=
		alert('6502 Assembler:\ndone.');=0A=
	}=0A=
	else {=0A=
		listing.value+=3D'\nfailed.\n';=0A=
		alert('6502 Assembler:\nfailed (see listing).');=0A=
	}=0A=
}=0A=
=0A=
function displayError(er) {=0A=
	listing.value+=3D'\n'+er+'\n';=0A=
}=0A=
=0A=
function getSrc(formfield) {=0A=
	if (formfield.value.indexOf('\r\n')>=3D0) {=0A=
		codesrc=3Dformfield.value.split('\r\n');=0A=
	}=0A=
	else if (formfield.value.indexOf('\r')>=3D0) {=0A=
		codesrc=3Dformfield.value.split('\r');=0A=
	}=0A=
	else {=0A=
		codesrc=3Dformfield.value.split('\n');=0A=
	}=0A=
}=0A=
=0A=
function getChar() {=0A=
	if (srcl>=3Dcodesrc.length) return 'EOF';=0A=
	if (srcc>=3Dcodesrc[srcl].length) {=0A=
		srcc=3D0;=0A=
		srcl++;=0A=
		return '\n';=0A=
	}=0A=
	else {=0A=
		var c=3Dcodesrc[srcl].charAt(srcc);=0A=
		srcc++;=0A=
		return c.toUpperCase();=0A=
	}=0A=
}=0A=
=0A=
function getSym() {=0A=
	var c=3DgetChar();=0A=
	if (c=3D=3D'EOF') return null;=0A=
	var sym=3D[''];=0A=
	var s=3D0;=0A=
	var m=3D0;=0A=
	while ((c!=3D';') && (c!=3D'\n') && (c!=3D'EOF')) {=0A=
		if ((c=3D=3D' ') || (c=3D=3D'\t')) {=0A=
			if (m>0) {=0A=
				m=3D0;=0A=
				s++;=0A=
				sym[s]=3D'';=0A=
			}=0A=
		}=0A=
		else if (c=3D=3D'=3D') {=0A=
			if (m>0) s++;=0A=
			sym[s]=3Dc;=0A=
			m=3D0;=0A=
			s++;=0A=
			sym[s]=3D'';=0A=
		}=0A=
		else {=0A=
			m=3D1;=0A=
			sym[s]+=3Dc;=0A=
		}=0A=
		c=3DgetChar();=0A=
	}=0A=
	while ((sym.length) && (sym[sym.length-1]=3D=3D'')) sym.length--;=0A=
	return (c=3D=3D'EOF')? null: sym;=0A=
}=0A=
=0A=
function getNumber(n) {=0A=
	var r;=0A=
	if (n=3D=3Dnull) r=3D0;=0A=
	if (n.charAt(0)=3D=3D'$') {=0A=
		for (var i=3D1; i<n.length; i++) {=0A=
			var c=3Dn.charAt(i);=0A=
			if ((c<'A') && (c>'Z') && (c<'0') && (c>'9')) return 'NaN';=0A=
		}=0A=
		r=3DparseInt(n.substring(1),16);=0A=
	}=0A=
	else if (n.charAt(0)=3D=3D'%') {=0A=
		for (var i=3D1; i<n.length; i++) {=0A=
			var c=3Dn.charAt(i);=0A=
			if ((c!=3D'1') && (c!=3D'0')) return 'NaN';=0A=
		}=0A=
		r=3DparseInt(n.substring(1),2);=0A=
	}=0A=
	else if (n.charAt(0)=3D=3D'0') {=0A=
		for (var i=3D1; i<n.length; i++) {=0A=
			var c=3Dn.charAt(i);=0A=
			if ((c<'0') && (c>'7')) return 'NaN';=0A=
		}=0A=
		r=3DparseInt(n,8);=0A=
	}=0A=
	else {=0A=
		for (var i=3D1; i<n.length; i++) {=0A=
			var c=3Dn.charAt(i);=0A=
			if ((c<'0') && (c>'9')) return 'NaN';=0A=
		}=0A=
		r=3DparseInt(n,10);=0A=
	}=0A=
	return (isNaN(r))? 'NaN' : r;=0A=
}=0A=
=0A=
function getIdentifier(n) {=0A=
	for (var i=3D0; i<n.length; i++) {=0A=
		var c=3Dn.charAt(i);=0A=
		if ((c<'A') && (c>'Z') && (c<'0') && (c>'9') && (c!=3D'_')) return '';=0A=
	}=0A=
	if (n.length>6) {=0A=
		n=3Dn.substring(0,6);=0A=
	}=0A=
	return n;=0A=
}=0A=
=0A=
function paddRight(s,l) {=0A=
	if (typeof s =3D=3D 'undefined') s=3D'';=0A=
	while (s.length<l) s+=3D' ';=0A=
	return s;=0A=
}=0A=
=0A=
function doPass(pass) {=0A=
	srcl=3Dsrcc=3Dpc=3D0;=0A=
	var sym=3DgetSym();=0A=
	while (sym) {=0A=
		listing.value+=3D'\n';=0A=
		if (sym.length=3D=3D0) {=0A=
			sym=3DgetSym();=0A=
			continue;=0A=
		}=0A=
		pc&=3D0xffff;=0A=
		var ofs=3D0;=0A=
		var c1=3Dsym[0].charAt(0);=0A=
		var padd=3D0;=0A=
		if (sym[0]=3D=3D'*') {=0A=
			// set pc=0A=
			listing.value+=3D'*';=0A=
			if ((sym.length>2) && (sym[1]=3D=3D'=3D')) {=0A=
				listing.value+=3D' =3D ';=0A=
				var a=3DgetNumber(sym[2]);=0A=
				if (a=3D=3D'NaN') {=0A=
					displayError('syntax error:\nnumber expected');=0A=
					return false;=0A=
				}=0A=
				else if (sym.length>3) {=0A=
					displayError('syntax error:\ntoo many arguments');=0A=
					return false;=0A=
				}=0A=
				listing.value+=3D'$'+getHexWord(a);=0A=
				pc=3Da;=0A=
			}=0A=
			else {=0A=
				displayError('syntax error:\nassignment expected');=0A=
				return false;=0A=
			}=0A=
			sym=3DgetSym();=0A=
			continue;=0A=
		}=0A=
		listing.value+=3DgetHexWord(pc)+' ';=0A=
		if (c1=3D=3D'.') {=0A=
			// pragma=0A=
			var pragma=3Dsym[0];=0A=
			listing.value+=3Dpragma;=0A=
			if (pragma=3D=3D'.END') {=0A=
				return true;=0A=
			}=0A=
			else if ((pragma!=3D'.WORD') && (pragma!=3D'.BYTE')) {=0A=
				displayError('syntax error:\ninvalid pragma');=0A=
				return false;=0A=
			}=0A=
			if (sym.length=3D=3D2) {=0A=
				if (pass=3D=3D2) {=0A=
					var v;=0A=
					if (sym[1]=3D=3D'*') {=0A=
						v=3Dpc;=0A=
					}=0A=
					else {=0A=
						v=3Dsym[1];=0A=
						var v1=3Dv.charAt(0);=0A=
						var bt=3D0;=0A=
						if ((v1=3D=3D'>') || (v1=3D=3D'<')) {=0A=
							bt=3D(v1=3D=3D'>')? 1:-1;=0A=
							v=3Dv.substr(1);=0A=
							v1=3Dv.charAt(0);=0A=
						}=0A=
						if ((v1=3D=3D'$') || (v1=3D=3D'%') || ((v1>=3D'0') && =
(v1<=3D'9'))) {=0A=
							// number=0A=
							v=3DgetNumber(v);=0A=
							if (v=3D=3D'NaN') {=0A=
								displayError('syntax error:\ninvalid value');=0A=
								return false;=0A=
							}=0A=
						}=0A=
						else {=0A=
							// identifier=0A=
							v=3DgetIdentifier(v);=0A=
							if (v=3D=3D'') {=0A=
								displayError('syntax error:\ninvalid identifier');=0A=
								return false;=0A=
							}=0A=
							else if (typeof symtab[v] =3D=3D 'undefined') {=0A=
								displayError('compiler error:\nundefined identifier: '+v);=0A=
								return false;=0A=
							}=0A=
							v=3Dsymtab[v];=0A=
						}=0A=
						if (bt<0) {=0A=
							// lo-byte=0A=
							v&=3D0xff;=0A=
						}=0A=
						else if (bt>0) {=0A=
							// hi-byte=0A=
							v=3DMath.floor(v/256)&0xff;=0A=
						}=0A=
					}=0A=
					v&=3D0xffff;=0A=
					var hi=3DMath.floor(v/256)&0xff;=0A=
					var lo=3Dv&0xff;=0A=
					code[code.length]=3Dlo;=0A=
					if (pragma=3D=3D'.WORD') {=0A=
						code[code.length]=3Dhi;=0A=
						listing.value +=3D ' $'+getHexWord(v)+'            =
'+getHexByte(lo)+' '+getHexByte(hi);=0A=
					}=0A=
					else {=0A=
						listing.value +=3D ' $'+getHexByte(lo)+'              =
'+getHexByte(lo);=0A=
					}=0A=
				}=0A=
				else {=0A=
					listing.value+=3D' '+sym[1];=0A=
				}=0A=
				pc+=3D(pragma=3D=3D'.WORD')? 2:1;=0A=
				sym=3DgetSym();=0A=
				continue;=0A=
			}=0A=
			else if (sym.length=3D=3D1) {=0A=
				displayError('syntax error:\nvalue expected');=0A=
				return false;=0A=
			}=0A=
			else {=0A=
				displayError('syntax error:\ntoo many arguments');=0A=
				return false;=0A=
			}=0A=
		}=0A=
		else if ((c1<'A') || (c1>'Z')) {=0A=
			listing.value+=3Dsym[0];=0A=
			displayError('syntax error:\ncharacter expected');=0A=
			return false;=0A=
		}=0A=
		if (instrtab[sym[0]]=3D=3Dnull) {=0A=
			// identifier=0A=
			var l=3DgetIdentifier(sym[0]);=0A=
			if (l=3D=3D'') {=0A=
				displayError('syntax error:\ninvalid identifier: '+sym[0]);=0A=
				return false;=0A=
			}=0A=
			listing.value+=3DpaddRight(l,6)+' ';=0A=
			ofs++;=0A=
			if ((sym.length>1) && (sym[ofs]=3D=3D'=3D')) {=0A=
				ofs++;=0A=
				listing.value+=3D'=3D ';=0A=
				if (sym.length<3) {=0A=
					displayError('syntax error:\nunexpected end of line');=0A=
					return false;=0A=
				}=0A=
				else if (sym.length>3) {=0A=
					displayError('syntax error:\ntoo many arguments');=0A=
					return false;=0A=
				}=0A=
				var v;=0A=
				if (sym[2]=3D=3D'*') {=0A=
					v=3Dpc;=0A=
				}=0A=
				else {=0A=
					v=3DgetNumber(sym[2]);=0A=
				}=0A=
				if (v=3D=3D'NaN') {=0A=
					displayError('syntax error:\nnumber expected');=0A=
					return false;=0A=
				}=0A=
				if (pass=3D=3D1) symtab[l]=3Dv;=0A=
				listing.value+=3DgetHexWord(v);=0A=
				sym=3DgetSym();=0A=
				continue;=0A=
			}=0A=
			else {=0A=
				if (pass=3D=3D1) symtab[l]=3Dpc;=0A=
				if (sym.length>=3Dofs+1) {=0A=
					c1=3Dsym[ofs].charAt(0);=0A=
				}=0A=
				else {=0A=
					sym=3DgetSym();=0A=
					continue=0A=
				}=0A=
				padd=3D7;=0A=
			}=0A=
		}=0A=
		if (sym.length<ofs) {=0A=
			// end of line=0A=
			sym=3DgetSym();=0A=
			continue;=0A=
		}=0A=
		if (padd=3D=3D0) listing.value+=3D'       ';=0A=
		padd=3D0;=0A=
		if ((c1<'A') || (c1>'Z')) {=0A=
			listing.value+=3Dsym[0];=0A=
			displayError('syntax error:\ncharacter expected');=0A=
			return false;=0A=
		}=0A=
		else {=0A=
			// opcode=0A=
			var opc=3Dsym[ofs];=0A=
			listing.value+=3Dopc+' ';=0A=
			var opctab=3Dinstrtab[opc];=0A=
			if (opctab=3D=3Dnull) {=0A=
				displayError('syntax error:\nopcode expected');=0A=
				return false;=0A=
			}=0A=
			var addr=3Dsym[ofs+1];=0A=
			var mode=3D0;=0A=
			if (typeof addr=3D=3D'undefined') {=0A=
				// implied=0A=
				if (opctab[0]<0) {=0A=
					displayError('syntax error:\nunexpected end of line');=0A=
					return false;=0A=
				}=0A=
				else if (pass=3D=3D2) {=0A=
					// compile=0A=
					listing.value+=3D'            '+getHexByte(opctab[0]);=0A=
					code[code.length]=3Dopctab[0];=0A=
				}=0A=
				pc++;=0A=
			}=0A=
			else if (sym.length>ofs+2) {=0A=
				displayError('syntax error:\ntoo many operands');=0A=
				return false;=0A=
			}=0A=
			else {=0A=
				var a1=3Daddr.charAt(0);=0A=
				var b1=3D0;=0A=
				var b2=3Daddr.length;=0A=
				if (addr=3D=3D'A') {=0A=
					if (pass=3D=3D2) { listing.value+=3D'A'; padd=3D1; }=0A=
					mode=3D1;=0A=
				}=0A=
				else if (a1=3D=3D'#') {=0A=
					if (pass=3D=3D2) { listing.value+=3Da1; padd=3D1; }=0A=
					b1=3D1;=0A=
					mode=3D2;=0A=
				}=0A=
				else if (a1=3D=3D'*') {=0A=
					if (pass=3D=3D2) { listing.value+=3Da1; padd=3D1; }=0A=
					b1=3D1;=0A=
					mode=3D6;=0A=
				}=0A=
				else if (a1=3D=3D'(') {=0A=
					if (pass=3D=3D2) { listing.value+=3Da1; padd=3D1; }=0A=
					b1=3D1;=0A=
					mode=3D9;=0A=
				}=0A=
				else {=0A=
					mode=3D(opctab[12]<0)? 3:12;=0A=
				}=0A=
				if (pass=3D=3D1) listing.value+=3Daddr;=0A=
				if (mode=3D=3D9) {=0A=
					var b3=3Daddr.indexOf(',X)');=0A=
					if ((b3>0) && (b3=3D=3Daddr.length-3)) {=0A=
						mode+=3D1;=0A=
					}=0A=
					else {=0A=
						b3=3Daddr.indexOf('),Y');=0A=
						if ((b3>0) && (b3=3D=3Daddr.length-3)) {=0A=
							mode+=3D2;=0A=
						}=0A=
						else {=0A=
							b3=3Daddr.indexOf(')');=0A=
						}=0A=
					}=0A=
					if (b3<0) {=0A=
						displayError('syntax error:\ninvalid address');=0A=
						return false;=0A=
					}=0A=
					b2=3Db3;=0A=
				}=0A=
				else if (mode>2) {=0A=
					var b3=3Daddr.indexOf(',X');=0A=
					if ((b3>0) && (b3=3D=3Daddr.length-2)) {=0A=
						mode+=3D1;=0A=
					}=0A=
					else {=0A=
						b3=3Daddr.indexOf(',Y');=0A=
						if ((b3>0) && (b3=3D=3Daddr.length-2)) mode+=3D2;=0A=
					}=0A=
					if (b3>0) b2=3Db3;=0A=
				}=0A=
				if (pass=3D=3D2) {=0A=
					var instr=3Dopctab[mode];=0A=
					if (instr<0) {=0A=
						displayError('compiler error:\ninvalid address mode for '+opc);=0A=
						return false;=0A=
					}=0A=
					else {=0A=
						code[code.length]=3Dinstr;=0A=
					}=0A=
					if (mode>1) {=0A=
						// operand=0A=
						addr=3Daddr.substring(b1,b2);=0A=
						var bt=3D0;=0A=
						var adp=3Daddr.charAt(0);=0A=
						var oper=3D0;=0A=
						if ((adp=3D=3D'>') || (adp=3D=3D'<')) {=0A=
							bt=3D(adp=3D=3D'>')? 1:-1;=0A=
							listing.value+=3Dadp; padd++;=0A=
							addr=3Daddr.substr(1);=0A=
							adp=3Daddr.charAt(0);=0A=
						}=0A=
						if ((adp=3D=3D'$') || (adp=3D=3D'%') || ((adp>=3D'0') && =
(adp<=3D'9'))) {=0A=
							// number=0A=
							oper=3DgetNumber(addr);=0A=
							if (oper=3D=3D'NaN') {=0A=
								displayError('syntax error:\nnumber expected');=0A=
								return false;=0A=
							}=0A=
							oper&=3D0xffff;=0A=
							var s=3D(steptab[mode]>2)? =
'$'+getHexWord(oper):'$'+getHexByte(oper);=0A=
							listing.value+=3Ds;=0A=
							padd+=3Ds.length;=0A=
						}=0A=
						else {=0A=
							// identifier=0A=
							addr=3DgetIdentifier(addr);=0A=
							if (addr=3D=3D'') {=0A=
								displayError('syntax error:\ninvalid identifier');=0A=
								return false;=0A=
							}=0A=
							else if (typeof symtab[addr] =3D=3D 'undefined') {=0A=
								displayError('compiler error:\nundefined identifier '+addr);=0A=
								return false;=0A=
							}=0A=
							oper=3Dsymtab[addr];=0A=
							listing.value+=3Daddr;=0A=
							addr=3D''+addr;=0A=
							padd+=3Daddr.length;=0A=
						}=0A=
						if (bt<0) {=0A=
							// lo-byte=0A=
							oper&=3D0xff;=0A=
						}=0A=
						else if (bt>0) {=0A=
							// hi-byte=0A=
							oper=3DMath.floor(oper/256)&0xff;=0A=
						}=0A=
						if (mode=3D=3D12) {=0A=
							// rel=0A=
							oper=3Doper-((pc+2)&0xffff);=0A=
							if ((oper>127) || (oper<-128)) {=0A=
								displayError('error: branch target out of range');=0A=
								return false;=0A=
							}=0A=
						}=0A=
						if ((mode=3D=3D4) || (mode=3D=3D7)) {=0A=
							listing.value+=3D',X';=0A=
							padd+=3D2;=0A=
						}=0A=
						else if ((mode=3D=3D5) || (mode=3D=3D8)) {=0A=
							listing.value+=3D',Y';=0A=
							padd+=3D2;=0A=
						}=0A=
						else if (mode=3D=3D9) {=0A=
							listing.value+=3D')';=0A=
							padd+=3D1;=0A=
						}=0A=
						else if (mode=3D=3D10) {=0A=
							listing.value+=3D',X)';=0A=
							padd+=3D3;=0A=
						}=0A=
						else if (mode=3D=3D11){=0A=
							listing.value+=3D'),Y';=0A=
							padd+=3D3;=0A=
						}=0A=
						// compile=0A=
						for (var i=3Dpadd; i<12; i++) listing.value+=3D' ';=0A=
						listing.value+=3DgetHexByte(instr);=0A=
						if (mode>1) {=0A=
							var op=3Doper&0xff;=0A=
							code[code.length]=3Dop;=0A=
							listing.value+=3D' '+getHexByte(op);=0A=
							if (steptab[mode]>2) {=0A=
								op=3D(Math.floor(oper/256))&0xff;=0A=
								code[code.length]=3Dop;=0A=
								listing.value+=3D' '+getHexByte(op);=0A=
							}=0A=
						}=0A=
					}=0A=
				}=0A=
				pc+=3Dsteptab[mode];=0A=
			}=0A=
		}=0A=
		sym=3DgetSym();=0A=
	}=0A=
	return true;=0A=
}=0A=
=0A=
function getHexByte(v) {=0A=
	return ''+hextab[Math.floor(v/16)]+hextab[v&0x0f];=0A=
}=0A=
=0A=
function getHexWord(v) {=0A=
	return =
''+hextab[Math.floor(v/0x1000)]+hextab[Math.floor((v&0x0f00)/256)]+hextab=
[Math.floor((v&0xf0)/16)]+hextab[v&0x000f];=0A=
}=0A=
=0A=
// eof=0A=

------=_NextPart_000_0000_01CCF0E8.2E628830--
